
Allocating common symbols
Common symbol       size              file

bss                 0x64              main.o

Memory Configuration

Name             Origin             Length             Attributes
flash            0x08000000         0x00020000         xr
sram             0x20000000         0x00005000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map


.text           0x08000000      0x1c0
 *(.vectors*)
 .vectors       0x08000000       0x1c startup.o
                0x08000000                vectors
 *(.text*)
 .text          0x0800001c       0x84 main.o
                0x0800001c                main
 .text          0x080000a0       0xbc startup.o
                0x080000a0                Default_Handler
                0x080000a0                NMI_Handler
                0x080000ac                Reset_Handler
 *(.rodata*)
 .rodata        0x0800015c       0x64 main.o
                0x0800015c                ro
                0x080001c0                _E_text = .

.glue_7         0x080001c0        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x080001c0        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x080001c0        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x080001c0        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x080001c0        0x0
 .iplt          0x00000000        0x0 main.o

.rel.dyn        0x080001c0        0x0
 .rel.iplt      0x00000000        0x0 main.o

.data           0x20000000       0x64 load address 0x080001c0
                0x20000000                _S_data = .
 *(.data)
 .data          0x20000000       0x64 main.o
                0x20000000                data
 .data          0x20000064        0x0 startup.o
                0x20000064                . = ALIGN (0x4)
                0x20000064                _E_data = .

.igot.plt       0x20000064        0x0 load address 0x08000224
 .igot.plt      0x00000000        0x0 main.o

.bss            0x20000064     0x1064 load address 0x08000224
                0x20000064                _S_bss = .
 *(.bss)
 .bss           0x20000064        0x0 main.o
 .bss           0x20000064        0x0 startup.o
                0x20000064                _E_bss = .
                0x20001064                . = (. + 0x1000)
 *fill*         0x20000064     0x1000 
                0x20001064                _stack_top = .
 COMMON         0x20001064       0x64 main.o
                0x20001064                bss
LOAD main.o
LOAD startup.o
OUTPUT(lec3.elf elf32-littlearm)

.debug_info     0x00000000      0x241
 .debug_info    0x00000000       0xcb main.o
 .debug_info    0x000000cb      0x176 startup.o

.debug_abbrev   0x00000000      0x178
 .debug_abbrev  0x00000000       0xa2 main.o
 .debug_abbrev  0x000000a2       0xd6 startup.o

.debug_loc      0x00000000       0x9c
 .debug_loc     0x00000000       0x38 main.o
 .debug_loc     0x00000038       0x64 startup.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 startup.o

.debug_line     0x00000000       0xf4
 .debug_line    0x00000000       0x48 main.o
 .debug_line    0x00000048       0xac startup.o

.debug_str      0x00000000      0x140
 .debug_str     0x00000000       0x70 main.o
                                 0x87 (size before relaxing)
 .debug_str     0x00000070       0xd0 startup.o
                                0x16c (size before relaxing)

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 startup.o

.ARM.attributes
                0x00000000       0x33
 .ARM.attributes
                0x00000000       0x33 main.o
 .ARM.attributes
                0x00000033       0x33 startup.o

.debug_frame    0x00000000       0x78
 .debug_frame   0x00000000       0x2c main.o
 .debug_frame   0x0000002c       0x4c startup.o
